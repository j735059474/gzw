/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.scap.pub.vos;
	
import nc.vo.pub.*;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 * 创建日期:
 * @author 
 * @version NCPrj ??
 */
@SuppressWarnings("serial")
public class ScapLayoutContainerVO extends SuperVO {
	private java.lang.String layout_container;
	private java.lang.String pk_layout_container;
	private java.lang.String parent_container;
	private java.lang.String code;
	private java.lang.String name;
	private java.lang.String container_type;
	private java.lang.Integer sort;
	private java.lang.String title;
	private java.lang.Integer height;
	private java.lang.Integer width;
	private java.lang.String title_url;
	private java.lang.String display_type = "0";
	private java.lang.String pk_chart;
	private java.lang.String isdrill = "0";
	private java.lang.String drill_class;
	private java.lang.String report_url;
	private java.lang.Integer dr = 0;
	private nc.vo.pub.lang.UFDateTime ts;

	public static final String LAYOUT_CONTAINER = "layout_container";
	public static final String PK_LAYOUT_CONTAINER = "pk_layout_container";
	public static final String PARENT_CONTAINER = "parent_container";
	public static final String CODE = "code";
	public static final String NAME = "name";
	public static final String CONTAINER_TYPE = "container_type";
	public static final String SORT = "sort";
	public static final String TITLE = "title";
	public static final String HEIGHT = "height";
	public static final String WIDTH = "width";
	public static final String TITLE_URL = "title_url";
	public static final String DISPLAY_TYPE = "display_type";
	public static final String PK_CHART = "pk_chart";
	public static final String ISDRILL = "isdrill";
	public static final String DRILL_CLASS = "drill_class";
	public static final String REPORT_URL = "report_url";
			
	/**
	 * 属性layout_container的Getter方法.属性名：parentPK
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getLayout_container () {
		return layout_container;
	}   
	/**
	 * 属性layout_container的Setter方法.属性名：parentPK
	 * 创建日期:
	 * @param newLayout_container java.lang.String
	 */
	public void setLayout_container (java.lang.String newLayout_container ) {
	 	this.layout_container = newLayout_container;
	} 	  
	/**
	 * 属性pk_layout_container的Getter方法.属性名：主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_layout_container () {
		return pk_layout_container;
	}   
	/**
	 * 属性pk_layout_container的Setter方法.属性名：主键
	 * 创建日期:
	 * @param newPk_layout_container java.lang.String
	 */
	public void setPk_layout_container (java.lang.String newPk_layout_container ) {
	 	this.pk_layout_container = newPk_layout_container;
	} 	  
	/**
	 * 属性parent_container的Getter方法.属性名：父容器主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getParent_container () {
		return parent_container;
	}   
	/**
	 * 属性parent_container的Setter方法.属性名：父容器主键
	 * 创建日期:
	 * @param newParent_container java.lang.String
	 */
	public void setParent_container (java.lang.String newParent_container ) {
	 	this.parent_container = newParent_container;
	} 	  
	/**
	 * 属性code的Getter方法.属性名：编码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getCode () {
		return code;
	}   
	/**
	 * 属性code的Setter方法.属性名：编码
	 * 创建日期:
	 * @param newCode java.lang.String
	 */
	public void setCode (java.lang.String newCode ) {
	 	this.code = newCode;
	} 	  
	/**
	 * 属性name的Getter方法.属性名：名称
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getName () {
		return name;
	}   
	/**
	 * 属性name的Setter方法.属性名：名称
	 * 创建日期:
	 * @param newName java.lang.String
	 */
	public void setName (java.lang.String newName ) {
	 	this.name = newName;
	} 	  
	/**
	 * 属性container_type的Getter方法.属性名：容器类型
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getContainer_type () {
		return container_type;
	}   
	/**
	 * 属性container_type的Setter方法.属性名：容器类型
	 * 创建日期:
	 * @param newContainer_type java.lang.String
	 */
	public void setContainer_type (java.lang.String newContainer_type ) {
	 	this.container_type = newContainer_type;
	} 	  
	/**
	 * 属性sort的Getter方法.属性名：排序
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getSort () {
		return sort;
	}   
	/**
	 * 属性sort的Setter方法.属性名：排序
	 * 创建日期:
	 * @param newSort java.lang.Integer
	 */
	public void setSort (java.lang.Integer newSort ) {
	 	this.sort = newSort;
	} 	  
	/**
	 * 属性title的Getter方法.属性名：标题
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTitle () {
		return title;
	}   
	/**
	 * 属性title的Setter方法.属性名：标题
	 * 创建日期:
	 * @param newTitle java.lang.String
	 */
	public void setTitle (java.lang.String newTitle ) {
	 	this.title = newTitle;
	} 	  
	/**
	 * 属性height的Getter方法.属性名：高度
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getHeight () {
		return height;
	}   
	/**
	 * 属性height的Setter方法.属性名：高度
	 * 创建日期:
	 * @param newHeight java.lang.Integer
	 */
	public void setHeight (java.lang.Integer newHeight ) {
	 	this.height = newHeight;
	} 	  
	/**
	 * 属性width的Getter方法.属性名：宽度
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getWidth () {
		return width;
	}   
	/**
	 * 属性width的Setter方法.属性名：宽度
	 * 创建日期:
	 * @param newWidth java.lang.Integer
	 */
	public void setWidth (java.lang.Integer newWidth ) {
	 	this.width = newWidth;
	} 	  
	/**
	 * 属性title_url的Getter方法.属性名：标题链接
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTitle_url () {
		return title_url;
	}   
	/**
	 * 属性title_url的Setter方法.属性名：标题链接
	 * 创建日期:
	 * @param newTitle_url java.lang.String
	 */
	public void setTitle_url (java.lang.String newTitle_url ) {
	 	this.title_url = newTitle_url;
	} 	  
	/**
	 * 属性display_type的Getter方法.属性名：图元类型
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getDisplay_type () {
		return display_type;
	}   
	/**
	 * 属性display_type的Setter方法.属性名：图元类型
	 * 创建日期:
	 * @param newDisplay_type java.lang.String
	 */
	public void setDisplay_type (java.lang.String newDisplay_type ) {
	 	this.display_type = newDisplay_type;
	} 	  
	/**
	 * 属性pk_chart的Getter方法.属性名：图表主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_chart () {
		return pk_chart;
	}   
	/**
	 * 属性pk_chart的Setter方法.属性名：图表主键
	 * 创建日期:
	 * @param newPk_chart java.lang.String
	 */
	public void setPk_chart (java.lang.String newPk_chart ) {
	 	this.pk_chart = newPk_chart;
	} 	  
	/**
	 * 属性isdrill的Getter方法.属性名：是否钻取
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getIsdrill () {
		return isdrill;
	}   
	/**
	 * 属性isdrill的Setter方法.属性名：是否钻取
	 * 创建日期:
	 * @param newIsdrill java.lang.String
	 */
	public void setIsdrill (java.lang.String newIsdrill ) {
	 	this.isdrill = newIsdrill;
	} 	  
	/**
	 * 属性drill_class的Getter方法.属性名：钻取处理类
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getDrill_class () {
		return drill_class;
	}   
	/**
	 * 属性drill_class的Setter方法.属性名：钻取处理类
	 * 创建日期:
	 * @param newDrill_class java.lang.String
	 */
	public void setDrill_class (java.lang.String newDrill_class ) {
	 	this.drill_class = newDrill_class;
	} 	  
	/**
	 * 属性report_url的Getter方法.属性名：报表链接
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getReport_url () {
		return report_url;
	}   
	/**
	 * 属性report_url的Setter方法.属性名：报表链接
	 * 创建日期:
	 * @param newReport_url java.lang.String
	 */
	public void setReport_url (java.lang.String newReport_url ) {
	 	this.report_url = newReport_url;
	} 	  
	/**
	 * 属性dr的Getter方法.属性名：dr
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDr () {
		return dr;
	}   
	/**
	 * 属性dr的Setter方法.属性名：dr
	 * 创建日期:
	 * @param newDr java.lang.Integer
	 */
	public void setDr (java.lang.Integer newDr ) {
	 	this.dr = newDr;
	} 	  
	/**
	 * 属性ts的Getter方法.属性名：ts
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getTs () {
		return ts;
	}   
	/**
	 * 属性ts的Setter方法.属性名：ts
	 * 创建日期:
	 * @param newTs nc.vo.pub.lang.UFDateTime
	 */
	public void setTs (nc.vo.pub.lang.UFDateTime newTs ) {
	 	this.ts = newTs;
	} 	  
 
	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
		return "layout_container";
	}   
    
	/**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	  return "pk_layout_container";
	}
    
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {
		return "scap_layout_container";
	}    
	
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public static java.lang.String getDefaultTableName() {
		return "scap_layout_container";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:
	  */
     public ScapLayoutContainerVO() {
		super();	
	}    
	
	@nc.vo.annotation.MDEntityInfo(beanFullclassName =  "nc.scap.pub.vos.ScapLayoutContainerVO" )
	public IVOMeta getMetaData() {
   		return null;
  	}
} 


