/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.scap.pt.vos;
	
import nc.vo.pub.*;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 * 创建日期:
 * @author 
 * @version NCPrj ??
 */
@SuppressWarnings("serial")
public class ScapptTransferTransfereeVO extends SuperVO {
	private java.lang.String pk_transfer_h;
	private java.lang.String pk_transfer_transferee;
	private java.lang.Integer inumber;
	private java.lang.String vname;
	private nc.vo.pub.lang.UFDouble dpercent;
	private java.lang.String vbdef5;
	private java.lang.String vbdef4;
	private java.lang.String vbdef3;
	private java.lang.String vbdef1;
	private java.lang.String vbdef2;
	private java.lang.Integer dr = 0;
	private nc.vo.pub.lang.UFDateTime ts;

	public static final String PK_TRANSFER_H = "pk_transfer_h";
	public static final String PK_TRANSFER_TRANSFEREE = "pk_transfer_transferee";
	public static final String INUMBER = "inumber";
	public static final String VNAME = "vname";
	public static final String DPERCENT = "dpercent";
	public static final String VBDEF5 = "vbdef5";
	public static final String VBDEF4 = "vbdef4";
	public static final String VBDEF3 = "vbdef3";
	public static final String VBDEF1 = "vbdef1";
	public static final String VBDEF2 = "vbdef2";
			
	/**
	 * 属性pk_transfer_h的Getter方法.属性名：parentPK
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_transfer_h () {
		return pk_transfer_h;
	}   
	/**
	 * 属性pk_transfer_h的Setter方法.属性名：parentPK
	 * 创建日期:
	 * @param newPk_transfer_h java.lang.String
	 */
	public void setPk_transfer_h (java.lang.String newPk_transfer_h ) {
	 	this.pk_transfer_h = newPk_transfer_h;
	} 	  
	/**
	 * 属性pk_transfer_transferee的Getter方法.属性名：主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_transfer_transferee () {
		return pk_transfer_transferee;
	}   
	/**
	 * 属性pk_transfer_transferee的Setter方法.属性名：主键
	 * 创建日期:
	 * @param newPk_transfer_transferee java.lang.String
	 */
	public void setPk_transfer_transferee (java.lang.String newPk_transfer_transferee ) {
	 	this.pk_transfer_transferee = newPk_transfer_transferee;
	} 	  
	/**
	 * 属性inumber的Getter方法.属性名：序号
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getInumber () {
		return inumber;
	}   
	/**
	 * 属性inumber的Setter方法.属性名：序号
	 * 创建日期:
	 * @param newInumber java.lang.Integer
	 */
	public void setInumber (java.lang.Integer newInumber ) {
	 	this.inumber = newInumber;
	} 	  
	/**
	 * 属性vname的Getter方法.属性名：出资人名称
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getVname () {
		return vname;
	}   
	/**
	 * 属性vname的Setter方法.属性名：出资人名称
	 * 创建日期:
	 * @param newVname java.lang.String
	 */
	public void setVname (java.lang.String newVname ) {
	 	this.vname = newVname;
	} 	  
	/**
	 * 属性dpercent的Getter方法.属性名：股权比例(%)
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDouble
	 */
	public nc.vo.pub.lang.UFDouble getDpercent () {
		return dpercent;
	}   
	/**
	 * 属性dpercent的Setter方法.属性名：股权比例(%)
	 * 创建日期:
	 * @param newDpercent nc.vo.pub.lang.UFDouble
	 */
	public void setDpercent (nc.vo.pub.lang.UFDouble newDpercent ) {
	 	this.dpercent = newDpercent;
	} 	  
	/**
	 * 属性vbdef5的Getter方法.属性名：自定义项5
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getVbdef5 () {
		return vbdef5;
	}   
	/**
	 * 属性vbdef5的Setter方法.属性名：自定义项5
	 * 创建日期:
	 * @param newVbdef5 java.lang.String
	 */
	public void setVbdef5 (java.lang.String newVbdef5 ) {
	 	this.vbdef5 = newVbdef5;
	} 	  
	/**
	 * 属性vbdef4的Getter方法.属性名：自定义项4
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getVbdef4 () {
		return vbdef4;
	}   
	/**
	 * 属性vbdef4的Setter方法.属性名：自定义项4
	 * 创建日期:
	 * @param newVbdef4 java.lang.String
	 */
	public void setVbdef4 (java.lang.String newVbdef4 ) {
	 	this.vbdef4 = newVbdef4;
	} 	  
	/**
	 * 属性vbdef3的Getter方法.属性名：自定义项3
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getVbdef3 () {
		return vbdef3;
	}   
	/**
	 * 属性vbdef3的Setter方法.属性名：自定义项3
	 * 创建日期:
	 * @param newVbdef3 java.lang.String
	 */
	public void setVbdef3 (java.lang.String newVbdef3 ) {
	 	this.vbdef3 = newVbdef3;
	} 	  
	/**
	 * 属性vbdef1的Getter方法.属性名：自定义项1
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getVbdef1 () {
		return vbdef1;
	}   
	/**
	 * 属性vbdef1的Setter方法.属性名：自定义项1
	 * 创建日期:
	 * @param newVbdef1 java.lang.String
	 */
	public void setVbdef1 (java.lang.String newVbdef1 ) {
	 	this.vbdef1 = newVbdef1;
	} 	  
	/**
	 * 属性vbdef2的Getter方法.属性名：自定义项2
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getVbdef2 () {
		return vbdef2;
	}   
	/**
	 * 属性vbdef2的Setter方法.属性名：自定义项2
	 * 创建日期:
	 * @param newVbdef2 java.lang.String
	 */
	public void setVbdef2 (java.lang.String newVbdef2 ) {
	 	this.vbdef2 = newVbdef2;
	} 	  
	/**
	 * 属性dr的Getter方法.属性名：dr
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDr () {
		return dr;
	}   
	/**
	 * 属性dr的Setter方法.属性名：dr
	 * 创建日期:
	 * @param newDr java.lang.Integer
	 */
	public void setDr (java.lang.Integer newDr ) {
	 	this.dr = newDr;
	} 	  
	/**
	 * 属性ts的Getter方法.属性名：ts
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getTs () {
		return ts;
	}   
	/**
	 * 属性ts的Setter方法.属性名：ts
	 * 创建日期:
	 * @param newTs nc.vo.pub.lang.UFDateTime
	 */
	public void setTs (nc.vo.pub.lang.UFDateTime newTs ) {
	 	this.ts = newTs;
	} 	  
 
	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
		return "pk_transfer_h";
	}   
    
	/**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	  return "pk_transfer_transferee";
	}
    
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {
		return "scappt_transfer_transferee";
	}    
	
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public static java.lang.String getDefaultTableName() {
		return "scappt_transfer_transferee";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:
	  */
     public ScapptTransferTransfereeVO() {
		super();	
	}    
	
	@nc.vo.annotation.MDEntityInfo(beanFullclassName =  "nc.scap.pt.vos.ScapptTransferTransfereeVO" )
	public IVOMeta getMetaData() {
   		return null;
  	}
} 


